var logger = require('cmn/logger');

function respondInfo(Comic) {
  return function(req, res, next) {
    logger.info(req.getQuery());

    // パラメータ取得
    var params = getQuery(req.getQuery()),
        key = getFindKey(params.key);
    if(key !== ""){
      Comic.find({key: new RegExp(key)}, function(err, docs){
        var json = {},
            aryDocs = [];
        json.results_count = docs.length;
        for(var i=0,len=docs.length;i<len;i++){
          aryDocs[i] = {
            title : docs[i].title,
            author : docs[i].author,
            publisher : docs[i].publisher
          };
        }
        json.results_masterInfo = aryDocs;
        res.send(json);
      });
    }else{
      res.send(makeErrorResponse());
    }
  };
}

module.exports = respondInfo;

function makeErrorResponse(){
  var json = {
    results_count : -1,
    results_masterInfo : []
  };
  return json;
}

function getQuery(in_queryString){
  var aryQuery = in_queryString.split("&"),
      params = {};
  for(var _i=0,_len=aryQuery.length; _i<_len;_i++){
    var _ary = aryQuery[_i].split("=");
    params[_ary[0]] = _ary[1];
  }
  return params;
}

function getFindKey(in_str){
  var rtn = "";
  if(is('String', in_str)){
    in_str = decodeURI(in_str);
    rtn = in_str.split("　").join("").split(" ").join("").toLowerCase();
  }
  return rtn;
}

function is(type, obj) {
    var clas = Object.prototype.toString.call(obj).slice(8, -1);
    return obj !== undefined && obj !== null && clas === type;
}