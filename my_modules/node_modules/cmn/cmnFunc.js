/**************************************************************************************************
 * モジュール名　: 共通巻数
 * 概要　　　　　: 全APIで共通の処理を定義する
 *************************************************************************************************/

/*
 * エラーレスポンス
 * 概　要 : エラー発生時のレスポンスを定義する
 * 引　数 : なし
 * 戻り値 : なし
 */
exports.makeErrorResponse = function(){
  var json = {
    results_count : -1,
    results_masterInfo : []
  };
  return json;
};

/*
 * クエリパラメータ取得処理
 * 概　要 : APIのクエリパラメータを取得し、連想配列に変換する
 * 引　数 : in_queryString・・・クエリストリング
 * 戻り値 : クエリ情報連想配列
 */
exports.getQuery = function(in_queryString){
  var aryQuery = in_queryString.split("&"),
      params = {};
  for(var _i=0,_len=aryQuery.length; _i<_len;_i++){
    var _ary = aryQuery[_i].split("=");
    params[_ary[0]] = _ary[1];
  }
  return params;
};

/*
 * 検索キーワード取得処理
 * 概　要 : キーワードを検索用に変換する
 * 引　数 : in_str・・・クエリから取得した検索用パラメータ
 * 戻り値 : 検索用文字列
 */
exports.getFindKey = function(in_str){
  var rtn = "";
  if(is('String', in_str)){
    in_str = decodeURI(in_str);
    rtn = in_str.split("　").join("").split(" ").join("").toLowerCase();
  }
  return rtn;
};

function is(type, obj) {
    var clas = Object.prototype.toString.call(obj).slice(8, -1);
    return obj !== undefined && obj !== null && clas === type;
}
